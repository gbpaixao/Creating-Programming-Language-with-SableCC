/* This file was generated by SableCC (http://www.sablecc.org/). */

package analysis;

import node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAStart(AStart node);
    void caseAVarDeclaracao(AVarDeclaracao node);
    void caseAConstDeclaracao(AConstDeclaracao node);
    void caseAFloatTipo(AFloatTipo node);
    void caseAIntTipo(AIntTipo node);
    void caseACharTipo(ACharTipo node);
    void caseAIdVar(AIdVar node);
    void caseAVetorVar(AVetorVar node);
    void caseAStringValor(AStringValor node);
    void caseAIntValor(AIntValor node);
    void caseAFloatValor(AFloatValor node);
    void caseAAtribuicaoComando(AAtribuicaoComando node);
    void caseALeiaComando(ALeiaComando node);
    void caseAEscrevaComando(AEscrevaComando node);
    void caseASeComando(ASeComando node);
    void caseASeElseComando(ASeElseComando node);
    void caseAAvalieComando(AAvalieComando node);
    void caseAAvalieElseComando(AAvalieElseComando node);
    void caseAEnquantoComando(AEnquantoComando node);
    void caseARepitaComando(ARepitaComando node);
    void caseAParaComando(AParaComando node);
    void caseAParaPassoComando(AParaPassoComando node);
    void caseAOpSumExp(AOpSumExp node);
    void caseATermoExp(ATermoExp node);
    void caseAOpMultTermo(AOpMultTermo node);
    void caseAFatorTermo(AFatorTermo node);
    void caseAParentesesFator(AParentesesFator node);
    void caseAValorFator(AValorFator node);
    void caseAVarFator(AVarFator node);
    void caseAMenosFator(AMenosFator node);
    void caseAOuExpLogica(AOuExpLogica node);
    void caseATermo1ExpLogica(ATermo1ExpLogica node);
    void caseAXorTermo1(AXorTermo1 node);
    void caseATermo2Termo1(ATermo2Termo1 node);
    void caseAETermo2(AETermo2 node);
    void caseATermo3Termo2(ATermo3Termo2 node);
    void caseAElem5Elemento1(AElem5Elemento1 node);
    void caseATermo3Elemento1(ATermo3Elemento1 node);
    void caseAOpIgualTermo3(AOpIgualTermo3 node);
    void caseATermo4Termo3(ATermo4Termo3 node);
    void caseAOpCompTermo4(AOpCompTermo4 node);
    void caseAExpAuxTermo7(AExpAuxTermo7 node);
    void caseANaoTermo5(ANaoTermo5 node);
    void caseATermo6Termo5(ATermo6Termo5 node);
    void caseAParentesesTermo6(AParentesesTermo6 node);
    void caseAOpSumExpAux(AOpSumExpAux node);
    void caseATermoExpAux(ATermoExpAux node);
    void caseAOpMultTermoAux(AOpMultTermoAux node);
    void caseAFatorTermoAux(AFatorTermoAux node);
    void caseAValorFatorAux(AValorFatorAux node);
    void caseAVarFatorAux(AVarFatorAux node);
    void caseAMenosFatorAux(AMenosFatorAux node);
    void caseAParentesesFatorAux(AParentesesFatorAux node);
    void caseAMaisOpSum(AMaisOpSum node);
    void caseAMenosOpSum(AMenosOpSum node);
    void caseAVezesOpMult(AVezesOpMult node);
    void caseADivididoOpMult(ADivididoOpMult node);
    void caseAIgualdadeOpIgualdade(AIgualdadeOpIgualdade node);
    void caseADiferencaOpIgualdade(ADiferencaOpIgualdade node);
    void caseAMaiorOpComp(AMaiorOpComp node);
    void caseAMenorOpComp(AMenorOpComp node);
    void caseAMaiorIgualOpComp(AMaiorIgualOpComp node);
    void caseAMenorIgualOpComp(AMenorIgualOpComp node);
    void caseAXorOpRel(AXorOpRel node);
    void caseAEOpRel(AEOpRel node);
    void caseAOuOpRel(AOuOpRel node);
    void caseAIfElse(AIfElse node);
    void caseACase(ACase node);
    void caseACaseElse(ACaseElse node);
    void caseANInt(ANInt node);
    void caseANInt1(ANInt1 node);
    void caseATermo7Aux(ATermo7Aux node);
    void caseADclSequenceDeclSequence(ADclSequenceDeclSequence node);
    void caseADeclDeclSequence(ADeclDeclSequence node);
    void caseACmdSequenceCmdSequence(ACmdSequenceCmdSequence node);
    void caseACmdCmdSequence(ACmdCmdSequence node);
    void caseAVarSequenceVarSequence(AVarSequenceVarSequence node);
    void caseAVarVarSequence(AVarVarSequence node);
    void caseASequenceExpSequence(ASequenceExpSequence node);
    void caseAExpExpSequence(AExpExpSequence node);
    void caseAOptionsCaseSequence(AOptionsCaseSequence node);
    void caseACaseCaseSequence(ACaseCaseSequence node);

    void caseTAvalie(TAvalie node);
    void caseTAte(TAte node);
    void caseTBooleano(TBooleano node);
    void caseTCaractere(TCaractere node);
    void caseTCaso(TCaso node);
    void caseTConstante(TConstante node);
    void caseTDe(TDe node);
    void caseTEntao(TEntao node);
    void caseTEnquanto(TEnquanto node);
    void caseTEscreva(TEscreva node);
    void caseTFaca(TFaca node);
    void caseTFalso(TFalso node);
    void caseTFim(TFim node);
    void caseTFimAvalie(TFimAvalie node);
    void caseTFimEnquanto(TFimEnquanto node);
    void caseTFimPara(TFimPara node);
    void caseTFimSe(TFimSe node);
    void caseTInicio(TInicio node);
    void caseTInteiro(TInteiro node);
    void caseTLeia(TLeia node);
    void caseTPara(TPara node);
    void caseTPasso(TPasso node);
    void caseTPrograma(TPrograma node);
    void caseTReal(TReal node);
    void caseTRepita(TRepita node);
    void caseTSe(TSe node);
    void caseTSenao(TSenao node);
    void caseTVerdadeiro(TVerdadeiro node);
    void caseTAbreColchete(TAbreColchete node);
    void caseTAbreParenteses(TAbreParenteses node);
    void caseTDoisPontos(TDoisPontos node);
    void caseTDoisPontosIgual(TDoisPontosIgual node);
    void caseTEnter(TEnter node);
    void caseTEspaco(TEspaco node);
    void caseTFechaColchete(TFechaColchete node);
    void caseTFechaParenteses(TFechaParenteses node);
    void caseTPontoVirgula(TPontoVirgula node);
    void caseTTab(TTab node);
    void caseTVirgula(TVirgula node);
    void caseTMais(TMais node);
    void caseTMenos(TMenos node);
    void caseTVezes(TVezes node);
    void caseTDividido(TDividido node);
    void caseTAtribuicao(TAtribuicao node);
    void caseTIgualdade(TIgualdade node);
    void caseTDiferenca(TDiferenca node);
    void caseTMaiorQue(TMaiorQue node);
    void caseTMenorQue(TMenorQue node);
    void caseTMaiorIgual(TMaiorIgual node);
    void caseTMenorIgual(TMenorIgual node);
    void caseTNao(TNao node);
    void caseTE(TE node);
    void caseTOu(TOu node);
    void caseTXor(TXor node);
    void caseTId(TId node);
    void caseTInt(TInt node);
    void caseTFloat(TFloat node);
    void caseTChar(TChar node);
    void caseTString(TString node);
    void caseTComentarioLinha(TComentarioLinha node);
    void caseTComentarioBlocoAbre(TComentarioBlocoAbre node);
    void caseTComentarioBlocoMeio(TComentarioBlocoMeio node);
    void caseTComentarioStar(TComentarioStar node);
    void caseTComentarioSlash(TComentarioSlash node);
    void caseTComentarioBlocoFecha(TComentarioBlocoFecha node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
