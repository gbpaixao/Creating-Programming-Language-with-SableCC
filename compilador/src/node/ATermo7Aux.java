/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class ATermo7Aux extends PTermo7Aux
{
    private PTermo7 _termo7_;

    public ATermo7Aux()
    {
        // Constructor
    }

    public ATermo7Aux(
        @SuppressWarnings("hiding") PTermo7 _termo7_)
    {
        // Constructor
        setTermo7(_termo7_);

    }

    @Override
    public Object clone()
    {
        return new ATermo7Aux(
            cloneNode(this._termo7_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATermo7Aux(this);
    }

    public PTermo7 getTermo7()
    {
        return this._termo7_;
    }

    public void setTermo7(PTermo7 node)
    {
        if(this._termo7_ != null)
        {
            this._termo7_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._termo7_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._termo7_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._termo7_ == child)
        {
            this._termo7_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._termo7_ == oldChild)
        {
            setTermo7((PTermo7) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
