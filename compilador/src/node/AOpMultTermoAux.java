/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AOpMultTermoAux extends PTermoAux
{
    private PTermoAux _termoAux_;
    private POpMult _opMult_;
    private PFatorAux _fatorAux_;

    public AOpMultTermoAux()
    {
        // Constructor
    }

    public AOpMultTermoAux(
        @SuppressWarnings("hiding") PTermoAux _termoAux_,
        @SuppressWarnings("hiding") POpMult _opMult_,
        @SuppressWarnings("hiding") PFatorAux _fatorAux_)
    {
        // Constructor
        setTermoAux(_termoAux_);

        setOpMult(_opMult_);

        setFatorAux(_fatorAux_);

    }

    @Override
    public Object clone()
    {
        return new AOpMultTermoAux(
            cloneNode(this._termoAux_),
            cloneNode(this._opMult_),
            cloneNode(this._fatorAux_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOpMultTermoAux(this);
    }

    public PTermoAux getTermoAux()
    {
        return this._termoAux_;
    }

    public void setTermoAux(PTermoAux node)
    {
        if(this._termoAux_ != null)
        {
            this._termoAux_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._termoAux_ = node;
    }

    public POpMult getOpMult()
    {
        return this._opMult_;
    }

    public void setOpMult(POpMult node)
    {
        if(this._opMult_ != null)
        {
            this._opMult_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opMult_ = node;
    }

    public PFatorAux getFatorAux()
    {
        return this._fatorAux_;
    }

    public void setFatorAux(PFatorAux node)
    {
        if(this._fatorAux_ != null)
        {
            this._fatorAux_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fatorAux_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._termoAux_)
            + toString(this._opMult_)
            + toString(this._fatorAux_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._termoAux_ == child)
        {
            this._termoAux_ = null;
            return;
        }

        if(this._opMult_ == child)
        {
            this._opMult_ = null;
            return;
        }

        if(this._fatorAux_ == child)
        {
            this._fatorAux_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._termoAux_ == oldChild)
        {
            setTermoAux((PTermoAux) newChild);
            return;
        }

        if(this._opMult_ == oldChild)
        {
            setOpMult((POpMult) newChild);
            return;
        }

        if(this._fatorAux_ == oldChild)
        {
            setFatorAux((PFatorAux) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
