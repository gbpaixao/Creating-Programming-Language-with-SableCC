/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AXorTermo1 extends PTermo1
{
    private PTermo1 _termo1_;
    private TXor _xor_;
    private PTermo2 _termo2_;

    public AXorTermo1()
    {
        // Constructor
    }

    public AXorTermo1(
        @SuppressWarnings("hiding") PTermo1 _termo1_,
        @SuppressWarnings("hiding") TXor _xor_,
        @SuppressWarnings("hiding") PTermo2 _termo2_)
    {
        // Constructor
        setTermo1(_termo1_);

        setXor(_xor_);

        setTermo2(_termo2_);

    }

    @Override
    public Object clone()
    {
        return new AXorTermo1(
            cloneNode(this._termo1_),
            cloneNode(this._xor_),
            cloneNode(this._termo2_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAXorTermo1(this);
    }

    public PTermo1 getTermo1()
    {
        return this._termo1_;
    }

    public void setTermo1(PTermo1 node)
    {
        if(this._termo1_ != null)
        {
            this._termo1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._termo1_ = node;
    }

    public TXor getXor()
    {
        return this._xor_;
    }

    public void setXor(TXor node)
    {
        if(this._xor_ != null)
        {
            this._xor_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._xor_ = node;
    }

    public PTermo2 getTermo2()
    {
        return this._termo2_;
    }

    public void setTermo2(PTermo2 node)
    {
        if(this._termo2_ != null)
        {
            this._termo2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._termo2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._termo1_)
            + toString(this._xor_)
            + toString(this._termo2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._termo1_ == child)
        {
            this._termo1_ = null;
            return;
        }

        if(this._xor_ == child)
        {
            this._xor_ = null;
            return;
        }

        if(this._termo2_ == child)
        {
            this._termo2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._termo1_ == oldChild)
        {
            setTermo1((PTermo1) newChild);
            return;
        }

        if(this._xor_ == oldChild)
        {
            setXor((TXor) newChild);
            return;
        }

        if(this._termo2_ == oldChild)
        {
            setTermo2((PTermo2) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
